library(tidyverse)
df<-read.csv("total_data.csv")
# Convert HH:MM:SS to seconds
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df
library(tidyverse)
df<-read.csv("total_data.csv")
# Convert HH:MM:SS to seconds
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df
df$Participant
df$Participant
df$Preference <- factor(df$Preference, levels = c("Digital", "Physical"))
df$Preference
t.test(NoteTakingTime_sec ~ Preference, data = df)
t.test(RetrievalTime_sec ~ Preference, data = df)
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Physical"])
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Digital"])
# Retrieval Time
shapiro.test(df$RetrievalTime_sec[df$Preference == "Physical"])
shapiro.test(df$RetrievalTime_sec[df$Preference == "Digital"])
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec[df$Preference])
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Physical"])
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Digital"])
# Retrieval Time
shapiro.test(df$RetrievalTime_sec[df$Preference == "Physical"])
shapiro.test(df$RetrievalTime_sec[df$Preference == "Digital"])
library(tidyverse)
df<-read.csv("total_data.csv")
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("Digital", "Physical"))
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Physical"])
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Physical"])
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Digital"])
# Retrieval Time
shapiro.test(df$RetrievalTime_sec[df$Preference == "Physical"])
shapiro.test(df$RetrievalTime_sec[df$Preference == "Digital"])
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Physical"])
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Digital"])
# Retrieval Time
shapiro.test(df$RetrievalTime_sec[df$Preference == "Physical"])
hist(df$RetrievalTime_sec[df$Preference == "Physical"])
qqnorm(df$RetrievalTime_sec[df$Preference == "Physical"])
qqline(df$RetrievalTime_sec[df$Preference == "Physical"])
shapiro.test(df$RetrievalTime_sec[df$Preference == "Digital"])
boxplot(NoteTakingTime_sec ~ Preference, data = df,
main = "Boxplot - Note Taking Time by Method",
ylab = "Time (sec)")
library(tidyverse)
df<-read.csv("total_data.csv")
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("Digital", "Physical"))
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Physical"])
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Digital"])
# Retrieval Time
shapiro.test(df$RetrievalTime_sec[df$Preference == "Physical"])
shapiro.test(df$RetrievalTime_sec[df$Preference == "Digital"])
View(df)
View(df)
library(tidyverse)
df<-read.csv("total_data.csv")
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("Digital", "Physical"))
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Physical"])
shapiro.test(df$NoteTakingTime_sec[df$Preference == "Digital"])
# Retrieval Time
shapiro.test(df$RetrievalTime_sec[df$Preference == "Physical"])
shapiro.test(df$RetrievalTime_sec[df$Preference == "Digital"])
View(df)
View(df)
df$NoteTakingTime_sec
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec)
# Retrieval Time
shapiro.test(df$RetrievalTime_sec)
library(tidyverse)
df<-read.csv("Final_Data_R.csv")
View(df)
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("Digital", "Physical"))
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec)
# Retrieval Time
shapiro.test(df$RetrievalTime_sec)
View(df)
library(tidyverse)
df<-read.csv("Final_Data_R.csv")
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("Digital", "Physical"))
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec)
# Retrieval Time
shapiro.test(df$RetrievalTime_sec)
# Note-Taking Time
wilcox.test(NoteTakingTime_sec ~ Preference, data = df)
# Retrieval Time
wilcox.test(RetrievalTime_sec ~ Preference, data = df)
library(tidyverse)
library(dplyr)
df<-read.csv("Final_Data_R.csv")
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("Digital", "Physical"))
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec)
# Retrieval Time
shapiro.test(df$RetrievalTime_sec)
df %>%
group_by(Preference) %>%
summarise(
MeanNoteTaking = mean(NoteTakingTime_sec, na.rm = TRUE),
MedianNoteTaking = median(NoteTakingTime_sec, na.rm = TRUE),
SDNoteTaking = sd(NoteTakingTime_sec, na.rm = TRUE),
MeanRetrieval = mean(RetrievalTime_sec, na.rm = TRUE),
MedianRetrieval = median(RetrievalTime_sec, na.rm = TRUE),
SDRetrieval = sd(RetrievalTime_sec, na.rm = TRUE),
N = n()
)
library(tidyverse)
library(dplyr)
df<-read.csv("Final_Data_R.csv")
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("Digital", "Physical"))
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec)
# Retrieval Time
shapiro.test(df$RetrievalTime_sec)
df %>%
group_by(Preference) %>%
summarise(
MeanNoteTaking = mean(NoteTakingTime_sec, na.rm = TRUE),
MedianNoteTaking = median(NoteTakingTime_sec, na.rm = TRUE),
SDNoteTaking = sd(NoteTakingTime_sec, na.rm = TRUE),
MeanRetrieval = mean(RetrievalTime_sec, na.rm = TRUE),
MedianRetrieval = median(RetrievalTime_sec, na.rm = TRUE),
SDRetrieval = sd(RetrievalTime_sec, na.rm = TRUE),
N = n()
)
# Note-Taking Time: Physical vs Digital
wilcox.test(NoteTakingTime_sec ~ Preference, data = df)
library(tidyverse)
library(dplyr)
df<-read.csv("Final_Data_R.csv")
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("1", "2"))
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec)
# Retrieval Time
shapiro.test(df$RetrievalTime_sec)
# Note-Taking Time: Physical vs Digital
wilcox.test(NoteTakingTime_sec ~ Preference, data = df)
# Retrieval Time: Physical vs Digital
wilcox.test(RetrievalTime_sec ~ Preference, data = df)
library(tidyverse)
library(dplyr)
df<-read.csv("Final_Data_R.csv")
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("1", "2"))
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec)
# Retrieval Time
shapiro.test(df$RetrievalTime_sec)
# Note-Taking Time: Physical vs Digital
wilcox.test(NoteTakingTime_sec ~ Preference, data = df)
# Retrieval Time: Physical vs Digital
wilcox.test(RetrievalTime_sec ~ Preference, data = df)
df$Preference
# Note-Taking Time: Physical vs Digital
wilcox.test(NoteTakingTime_sec ~ Preference, data = df)
# Retrieval Time: Physical vs Digital
wilcox.test(RetrievalTime_sec ~ Preference, data = df)
library(tidyverse)
library(dplyr)
df<-read.csv("Final_Data_R.csv")
# HH:MM:SS to seconds function
time_to_seconds <- function(time_str) {
parts <- strsplit(as.character(time_str), ":")[[1]]
if (length(parts) == 3) {
return(as.numeric(parts[1])*3600 + as.numeric(parts[2])*60 + as.numeric(parts[3]))
} else {
return(NA)
}
}
df$NoteTakingTime_sec <- sapply(df$NoteTakingTime, time_to_seconds)
df$RetrievalTime_sec <- sapply(df$RetrievalTime, time_to_seconds)
df$Participant
df$Preference <- factor(df$Preference, levels = c("1", "2"))
df$Preference
# Note-Taking Time
shapiro.test(df$NoteTakingTime_sec)
# Retrieval Time
shapiro.test(df$RetrievalTime_sec)
# Note-Taking Time: Physical vs Digital
wilcox.test(NoteTakingTime_sec ~ Preference, data = df)
# Retrieval Time: Physical vs Digital
wilcox.test(RetrievalTime_sec ~ Preference, data = df)
df %>%
group_by(Preference) %>%
summarise(
Mean_Note = mean(NoteTakingTime_sec, na.rm = TRUE),
Median_Note = median(NoteTakingTime_sec, na.rm = TRUE),
SD_Note = sd(NoteTakingTime_sec, na.rm = TRUE),
Mean_Retrieval = mean(RetrievalTime_sec, na.rm = TRUE),
Median_Retrieval = median(RetrievalTime_sec, na.rm = TRUE),
SD_Retrieval = sd(RetrievalTime_sec, na.rm = TRUE),
N = n()
)
boxplot(NoteTakingTime_sec ~ Preference, data = df,
main = "Note-Taking Time by Method", ylab = "Seconds")
boxplot(RetrievalTime_sec ~ Preference, data = df,
main = "Retrieval Time by Method", ylab = "Seconds")
View(df)
